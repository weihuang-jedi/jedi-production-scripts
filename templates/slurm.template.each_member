#!/bin/bash
#SBATCH --ntasks-per-node=TASKSPERNODE
#SBATCH -N TOTALNODES
#SBATCH -n TOTALCPUS
#SBATCH -t 01:25:00
#SBATCH -A gsienkf
#SBATCH --partition=orion
##SBATCH --partition=bigmem
#SBATCH --job-name=DATATYPE
#SBATCH --output=log.DATATYPE
##SBATCH --mem=0

 export NODES=$SLURM_NNODES
#export corespernode=$SLURM_CPUS_ON_NODE

 source ~/intelenv

 ulimit -S unlimited
 ulimit -c unlimited

#export blddir=/work/noaa/gsienkf/weihuang/jedi/src/my.compile
#export blddir=/work2/noaa/gsienkf/weihuang/jedi/compile_intel
 export blddir=/work2/noaa/gsienkf/weihuang/jedi/per_core_timing/build
#export blddir=/work2/noaa/gsienkf/weihuang/production/build/fv3-bundle
 export LD_LIBRARY_PATH=${blddir}/lib:$LD_LIBRARY_PATH
 executable=$blddir/bin/fv3jedi_letkf.x

#--------------------------------------------------------------------------------------------
#export OOPS_DEBUG=-11
#export OOPS_TRACK=-11
#export OOPS_TRACE=1

#--------------------------------------------------------------------------------------------
 cd WORKDIR
 rm -f core.*

 ln -sf ../../Data .
 ln -sf ../../ioda_v2_data .

#--------------------------------------------------------------------------------------------

 mkdir -p analysis/mean hofx obsout

 number_members=NUMMEM
 n=0
 while [ $n -lt $number_members ]
 do
   used_nodes=0
   while [ $used_nodes -lt $NODES ] && [ $n -le $number_members ]
   do
      used_nodes=$(( $used_nodes + 1 ))

      if [ $n -lt 10 ]
      then
         member_str=mem00${n}
      elif [ $n -lt 100 ]
      then
         member_str=mem0${n}
      else
         member_str=mem${n}
      fi

      mkdir -p analysis/increment/${member_str}
      mkdir -p obsout/${member_str}

sed -e "s?MEMSTR?${member_str}?g" \
    getkf.yaml.observer.template > obsout/getkf.yaml.observer.${member_str}

#srun -N 1 --ntasks=36 --ntasks-per-node=36 --ntasks-per-socket=18 ${executable} analysis/getkf.yaml.${member_str} >& obsout/log.${member_str} &
srun -N 1 -n 36 ${executable} obsout/getkf.yaml.observer.${member_str} >& obsout/log.${member_str} &
      n=$(( $n + 1 ))
   done
   wait
 done

 mv obsout observer
 mkdir -p solver

 n=0
 while [ $n -lt $number_members ]
 do
   used_nodes=0
   while [ $used_nodes -lt $NODES ] && [ $n -le $number_members ]
   do
      used_nodes=$(( $used_nodes + 1 ))

      if [ $n -lt 10 ]
      then
         member_str=mem00${n}
      elif [ $n -lt 100 ]
      then
         member_str=mem0${n}
      else
         member_str=mem${n}
      fi

      mkdir -p solver/${member_str}

sed -e "s?MEMSTR?${member_str}?g" \
    getkf.yaml.solver.template > solver/getkf.yaml.solver.${member_str}

srun -N 1 -n 36 ${executable} solver/getkf.yaml.${member_str} >& solver/log.${member_str} &
      n=$(( $n + 1 ))
   done
   wait
 done

